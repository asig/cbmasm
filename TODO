#TODOs
[X] Add defines on the command line
[X] Add Z80 assembler for C128 mode
[X] Add characters literals
[X] PETSCII encoding
[X] Add "screen encoding" function
[X] Support proper value range in Nodes
[X] Move "checkRange" call into Nodes
[X] generate listings
[X] Add string constants also for .equ and conditional compilation
[X] introduce "platform"
    [ ] only allow Z80 code when platform is C128
[ ] .fail implementation:
    [ ] allow comma separated list of messages
    [ ] Allow symbols in message
[X] turn "platform" into a directive
    [ ] Allow override in the code only if no other directive (except macro def) has been executed
[X] store value of ".cpu" in symbol table
[X] LDx/STx should use zero page addressing if possible (example: "dp .equ $fb; sta dp" should generate $85 $FB, not $8D $FB $00)
[X] scr() should be allowed as an expressions in e.g lda #scr(' ')
[X] incbin: add "skip bytes"
[ ] expression support
    [ ] logical OR
    [ ] logical AND
    [ ] logical XOR
[ ] generate object files and add a linker
[X] CP/M assembly
    [X] Don't use PETSCII encoding (or let the user choose with ".encoding" pseudo instr?)
    [X] Generate proper file header (again, let user choose with pseudo instr?)
[ ] Add version info, build info

#Cleanups
[ ] Introduce types for CPU, Platform, Output, Encoding

#BUGs
[X] local labels in macros are not cleared when the macro is finished. Potential fix: remove labels that were generated in the macro
[X] listing repeats macro line
[X] Macros report local labels as undefined if they're passed in as a param
[X] Undefined labels should be reported at reference sites, not the end of the code.
[X] Word constants are not always 2 bytes
[ ] byte expressions are forced to a size too early (already during const eval, e.g. "LDA #($1FF-$100)" although it shouldn't )
[ ] .equs used in macros, but defined afterwards, are not correctly resolved and result in "undef symbol"
[ ] macro calls ignore garbage at the enf of the line, they should fail
